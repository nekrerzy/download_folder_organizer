trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscriptionEndpoint: 'aks-rg'
  kubernetesCluster: 'dev-cool'
  namespace: 'default'
  azureResourceGroup: 'cool-aks'

steps:
  - task: Kubernetes@1
    inputs:
      connectionType: Azure Resource Manager
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureResourceGroup: $(azureResourceGroup)
      kubernetesCluster: $(kubernetesCluster)
      useClusterAdmin: true
      namespace: $(namespace)
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nginx-deployment
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: nginx
          template:
            metadata:
              labels:
                app: nginx
            spec:
              containers:
              - name: nginx
                image: nginx:latest
                ports:
                - containerPort: 80

  - task: Kubernetes@1
    inputs:
      connectionType: Azure Resource Manager
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureResourceGroup: $(azureResourceGroup)
      kubernetesCluster: $(kubernetesCluster)
      useClusterAdmin: true
      namespace: $(namespace)
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx-service
        spec:
          selector:
            app: nginx
          ports:
            - protocol: TCP
              port: 80
              targetPort: 80
          type: LoadBalancer

  - task: Kubernetes@1
    inputs:
      connectionType: Azure Resource Manager
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureResourceGroup: $(azureResourceGroup)
      kubernetesCluster: $(kubernetesCluster)
      useClusterAdmin: true
      namespace: $(namespace)
      command: 'get'
      arguments: svc

  - task: Kubernetes@1
    inputs:
      connectionType: Azure Resource Manager
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureResourceGroup: $(azureResourceGroup)
      kubernetesCluster: $(kubernetesCluster)
      useClusterAdmin: true
      namespace: $(namespace)
      command: 'apply'
      useConfigurationFile: true
      configurationType: 'inline'
      inline: |
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: nginx-ingress
          annotations:
            kubernetes.io/ingress.class: azure/application-gateway
            appgw.ingress.kubernetes.io/backend-path-prefix: "/"
            appgw.ingress.kubernetes.io/override-frontend-port: "80"
        spec:
          rules:
          - http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: nginx-service
                    port:
                      number: 80

  - task: Kubernetes@1
    inputs:
      connectionType: Azure Resource Manager
      azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
      azureResourceGroup: $(azureResourceGroup)
      kubernetesCluster: $(kubernetesCluster)
      useClusterAdmin: true
      namespace: $(namespace)
      command: 'get'
      arguments: ing